/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   Phonebook.cpp                                      :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: mamaquig <mamaquig@student.42.fr>          +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2022/01/11 00:17:15 by mamaquig          #+#    #+#             */
/*   Updated: 2022/03/01 15:50:28 by mamaquig         ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "Phonebook.hpp"
#include "phone_bot.h"

/*
**	Constructeur
*/
Phonebook::Phonebook() : index(0), scd_index(0) {
	std::cout << "\\(^‚óá^)/: ‚Ñçùïö ùï§ùïöùï£. ùïêùï†ùï¶ ùïîùïíùïü ùïîùïôùï†ùï†ùï§ùïñ ùüõ ùïîùï†ùïû ùïû ùïíùïüùïïùï§:";
	std::cout << std::endl << std::endl;
	std::cout << "\t.ùêÄùêÉùêÉ" << std::endl << "\t.ùêíùêÑùêÄùêëùêÇùêá" << std::endl <<"\t.ùêÑùêóùêàùêì";
	std::cout << std::endl << std::endl;
	std::cout << "ùïé ùïôùïöùïîùïô ùï†ùïüùïñ ùïïùï† ùï™ùï†ùï¶ ùï®ùïíùïüùï• ùï•ùï† ùïîùïôùï†ùï†ùï§ùïñ ?" << std::endl << ">";
}

/*
**	Destructeur
*/
Phonebook::~Phonebook() {
}

/*
**	R√©cup√®re l'input de l'entr√©e standard et appel la fonction ad√©quate
*/
bool	Phonebook::get_cmd() {
	std::string	cmd;

	if (!std::getline(std::cin, cmd)) {
		std::cerr << "Error getline. Exit." << std::endl;
		return (false);
	}
	if (cmd == "add" || cmd == "ADD" || cmd == "Add")
		this->_add_cmd();
	else if (cmd == "search" || cmd == "SEARCH" || cmd == "Search")
		this->_search_cmd();
	else if (cmd == "exit" || cmd == "EXIT" || cmd == "Exit")
		return (this->_exit_cmd());
	else
		this->_wrong_cmd();
	return (true);
}

/*
**	Affiche sur la sortie standard un message d'erreur
*/
void	Phonebook::_wrong_cmd() const {
	std::cout << std::endl << "(„Å£‚óî‚ó°‚óî)„Å£: ùïäùï†ùï£ùï£ùï™, ùï™ùï†ùï¶ùï£ ùï£ùïñùï¢ùï¶ùïñùï§ùï• ùïíùï£ùïñùïü'ùï• \
ùïßùïíùïùùïöùïï. ùïêùï†ùï¶ ùïîùïíùïü ùïîùïôùï†ùï†ùï§ùïñ ùüõ ùïîùï†ùïû ùïû ùïíùïüùïïùï§:" << std::endl << std::endl;
	std::cout << "\t.ùêÄùêÉùêÉ" << std::endl << "\t.ùêíùêÑùêÄùêëùêÇùêá" << std::endl <<"\t.ùêÑùêóùêàùêì";
	std::cout << std::endl << std::endl;
	std::cout << "ùïé ùïôùïöùïîùïô ùï†ùïüùïñ ùïïùï† ùï™ùï†ùï¶ ùï®ùïíùïüùï• ùï•ùï† ùïîùïôùï†ùï†ùï§ùïñ ?" << std::endl << ">";
}

/*
**	Affiche la demande de la nouvelle commande et renvoi true
*/
bool	Phonebook::_next_request() const {
	std::cout << std::endl << "(„Å£‚óî‚ó°‚óî)„Å£: ùïé ùïôùïíùï•'ùï§ ùï™ùï†ùï¶ùï£ ùïüùïñùï©ùï• ùï£ùïñùï¢ùï¶ùïñùï§ùï• ?";
	std::cout << std::endl << ">";
	return (true);
}

/*
**	Ajoute first name au string data
*/
bool	Phonebook::_add_first_name(std::string *data) const {
	std::cout << std::endl << "ùïé ùïôùïíùï•'ùï§ ùïôùïöùï§ ùïóùïöùï£ùï§ùï• ùïüùïíùïû ùïñ ?" << std::endl << ">";
	if (!std::getline(std::cin, *data)) {
		std::cerr << "Error getline. Exit." << std::endl;
		return (false);
	}
	if (!(*data).length()) {
		std::cout << std::endl << "¬Ø\\_‡≤†_‡≤†_/¬Ø: ùïäùï†ùï£ùï£ùï™ ùïìùï¶ùï• ùï™ùï†ùï¶ ùïû ùï¶ùï§ùï• ùï§ùïñùï• ùïí ùïóùïöùï£ùï§ùï• ùïüùïíùïû ùïñ";
		this->_add_first_name(data);
	}
	return (true);
}

/*
**	Ajoute last name au string data
*/
bool	Phonebook::_add_last_name(std::string *data) const {
	std::cout << std::endl << "ùïé ùïôùïíùï•'ùï§ ùïôùïöùï§ ùïùùïíùï§ùï• ùïüùïíùïû ùïñ ?" << std::endl << ">";
	if (!std::getline(std::cin, *data)) {
		std::cerr << "Error getline. Exit." << std::endl;
		return (false);
	}
	if (!(*data).length()) {
		std::cout << std::endl << "¬Ø\\_‡≤†_‡≤†_/¬Ø: ùïäùï†ùï£ùï£ùï™ ùïìùï¶ùï• ùï™ùï†ùï¶ ùïû ùï¶ùï§ùï• ùï§ùïñùï• ùïí ùïùùïíùï§ùï• ùïüùïíùïû ùïñ.";
		this->_add_last_name(data);
	}
	return (true);
}

/*
**	Ajoute nickname au string data
*/
bool	Phonebook::_add_nickname(std::string *data) const {
	std::cout << std::endl << "ùïé ùïôùïíùï•'ùï§ ùïôùïöùï§ ùïüùïöùïîùïúùïüùïíùïû ùïñ ?" << std::endl << ">";
	if (!std::getline(std::cin, *data)) {
		std::cerr << "Error getline. Exit." << std::endl;
		return (false);
	}
	if (!(*data).length()) {
		std::cout << std::endl << "¬Ø\\_‡≤†_‡≤†_/¬Ø: ùïäùï†ùï£ùï£ùï™ ùïìùï¶ùï• ùï™ùï†ùï¶ ùïû ùï¶ùï§ùï• ùï§ùïñùï• ùïí ùïüùïöùïîùïúùïüùïíùïû ùïñ.";
		this->_add_nickname(data);
	}
	return (true);
}

/*
**	Ajoute phone number au string data
*/
bool	Phonebook::_add_phone_number(std::string *data) const {
	std::cout << std::endl << "ùïé ùïôùïíùï•'ùï§ ùïôùïöùï§ ùï°ùïôùï†ùïüùïñ ùïüùï¶ùïû ùïìùïñùï£ ?" << std::endl << ">";
	if (!std::getline(std::cin, *data)) {
		std::cerr << "Error getline. Exit." << std::endl;
		return (false);
	}
	if (!(*data).length()) {
		std::cout << std::endl << "¬Ø\\_‡≤†_‡≤†_/¬Ø: ùïäùï†ùï£ùï£ùï™ ùïìùï¶ùï• ùï™ùï†ùï¶ ùïû ùï¶ùï§ùï• ùï§ùïñùï• ùïí ùï°ùïôùï†ùïüùïñ ùïüùï¶ùïû ùïìùïñùï£.";
		this->_add_phone_number(data);
	}
	return (true);
}

/*
**	Ajoute darkest secret au string data
*/
bool	Phonebook::_add_darkest_secret(std::string *data) const {
	std::cout << std::endl << "ùïé ùïôùïíùï•'ùï§ ùïôùïöùï§ ùïïùïíùï£ùïúùïñùï§ùï• ùï§ùïñùïîùï£ùïñùï• ?" << std::endl << ">";
	if (!std::getline(std::cin, *data)) {
		std::cerr << "Error getline. Exit." << std::endl;
		return (false);
	}
	if (!(*data).length()) {
		std::cout << std::endl << "¬Ø\\_‡≤†_‡≤†_/¬Ø: ùïäùï†ùï£ùï£ùï™ ùïìùï¶ùï• ùï™ùï†ùï¶ ùïû ùï¶ùï§ùï• ùï§ùïñùï• ùïí ùïïùïíùï£ùïúùïñùï§ùï• ùï§ùïñùïîùï£ùïñùï•.";
		this->_add_darkest_secret(data);
	}
	return (true);
}

/*
** Commande ADD, qui ajoute un contact
*/
bool	Phonebook::_add_cmd() {
	if (this->index == MAX_SIZE) {
		if (this->scd_index == MAX_SIZE - 1)
			this->scd_index = -1;
		this->scd_index++;
	}
	else
		this->scd_index = this->index;
	std::string	data[5];
	std::cout << std::endl << "(„Å£‚óî‚ó°‚óî)„Å£: ";
	if (!this->_add_first_name(&data[0]) || !this->_add_last_name(&data[1])
		|| !this->_add_nickname(&data[2]) || !this->_add_phone_number(&data[3])
		|| !this->_add_darkest_secret(&data[4]))
		return (false);
	this->contact[this->scd_index] = Contact(data);
	if (this->index != MAX_SIZE)
		this->index++;
	return (this->_next_request());
}

/*
**	Commande SEARCH, qui cherche un contact
*/
bool	Phonebook::_search_cmd() {
	if (!this->index) {
		std::cout << std::endl << "(ÿ≥ Õ†¬∞ Õü ñ Õ°¬∞)ÿ≥: ùïîùïíùïüùïüùï†ùï• ùï§ùïñùïíùï£ùïîùïô ùïóùï†ùï£ ùïí ùïîùï†ùïüùï•ùïíùïîùï• ùïöùïó ùïôùïñ'ùï§ ùïüùï†ùï• ùïíùïïùïïùïñùïï.";
		std::cout << std::endl;
		return (this->_next_request());
	}
	this->contact->print_contacts(this->index, this->contact);
	if (!this->contact->print_infos(this->index, this->contact))
		return (false);
	return (this->_next_request());
}

/*
**	Commande EXIT, qui quitte le programme
*/
bool	Phonebook::_exit_cmd() const {
	std::cout << std::endl << "( Ôºæ‚ó°Ôºæ)„Å£: ùïÄùï• ùï®ùïíùï§ ùïí ùï°ùïùùïñùïíùï§ùï¶ùï£ùïñ. ùïäùïñùïñ ùï™ùï†ùï¶ ! üíó" << std::endl;
	return (false);
}
